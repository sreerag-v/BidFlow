// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/sreerag_v/BidFlow/pkg/api"
	"github.com/sreerag_v/BidFlow/pkg/api/handler/admin"
	"github.com/sreerag_v/BidFlow/pkg/api/handler/provider"
	"github.com/sreerag_v/BidFlow/pkg/api/handler/user"
	"github.com/sreerag_v/BidFlow/pkg/config"
	"github.com/sreerag_v/BidFlow/pkg/db"
	"github.com/sreerag_v/BidFlow/pkg/helper"
	"github.com/sreerag_v/BidFlow/pkg/repository/admin"
	"github.com/sreerag_v/BidFlow/pkg/repository/provider"
	"github.com/sreerag_v/BidFlow/pkg/repository/user"
	"github.com/sreerag_v/BidFlow/pkg/usecase/admin"
	"github.com/sreerag_v/BidFlow/pkg/usecase/provider"
	"github.com/sreerag_v/BidFlow/pkg/usecase/user"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.Config) (*httpserver.ServerHttp, error) {
	gormDB, err := db.ConnectDatabase(cfg)
	if err != nil {
		return nil, err
	}
	interfacesAdminRepo := adminRepo.NewAdminRepo(gormDB)
	interfacesHelper := helper.NewHelper(cfg)
	interfacesAdminUsecase := adminUsecase.NewAdminUsecase(interfacesAdminRepo, interfacesHelper)
	adminHandlerAdminHandler := adminHandler.NewAdminHandler(interfacesAdminUsecase)
	categoryRepo := adminRepo.NewCategoryRepo(gormDB)
	categoryUsecase := adminUsecase.NewCategoryRepo(categoryRepo)
	categoryHandler := adminHandler.NewCategoryHandler(categoryUsecase)
	serviceRepo := adminRepo.NewServiceRepo(gormDB)
	userMgmtRepo := adminRepo.NewUserMgmtRepo(gormDB)
	regionRepo := adminRepo.NewRegionRepo(gormDB)
	serviceUsecase := adminUsecase.NewServiceUsecase(serviceRepo, userMgmtRepo, regionRepo)
	serviceHandler := adminHandler.NewServiceHandler(serviceUsecase)
	regionUsecase := adminUsecase.NewRegionUsecase(regionRepo)
	regionHandler := adminHandler.NewRegionHandler(regionUsecase)
	userMgmtUsecase := adminUsecase.NewUserMgmtUsecase(userMgmtRepo, serviceRepo)
	userMgmtHandler := adminHandler.NewUserMgmtHandler(userMgmtUsecase)
	profileRepo := providerRepo.NewProfileRepo(gormDB)
	profileUsecase := providerUsecase.NewProfileUsecase(profileRepo)
	profileHandler := proiderHandler.NewProfileHandler(profileUsecase)
	interfacesProviderRepo := providerRepo.NewProviderRepo(gormDB)
	interfacesProviderUsecase := providerUsecase.NewProviderUsecase(interfacesProviderRepo, interfacesHelper)
	providerHandler := proiderHandler.NewProviderHandler(interfacesProviderUsecase)
	interfacesUserRepo := userRepo.NewUserRepo(gormDB)
	interfacesUserUsecase := userUsecase.NewUserUsecase(interfacesUserRepo, interfacesHelper)
	userHandlerUserHandler := userHandler.NewUserHandler(interfacesUserUsecase)
	workRepo := userRepo.NewWorkRepo(gormDB)
	workUsecase := userUsecase.NewWorkUsecase(workRepo)
	workHandler := userHandler.NewWorkHandler(workUsecase)
	serverHttp := httpserver.NewServerHttp(adminHandlerAdminHandler, categoryHandler, serviceHandler, regionHandler, userMgmtHandler, profileHandler, providerHandler, userHandlerUserHandler, workHandler)
	return serverHttp, nil
}
